import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Read the tokens JSON
const tokensPath = path.join(__dirname, 'tokens.json');
const tokens = JSON.parse(fs.readFileSync(tokensPath, 'utf8'));

// Generate CSS custom properties
function generateCSSVariables(obj: any, prefix = ''): string {
  let css = '';

  for (const [key, value] of Object.entries(obj)) {
    const cssVar = `--${prefix}${prefix ? '-' : ''}${key}`;

    if (typeof value === 'object' && value !== null) {
      // Recursive for nested objects
      css += generateCSSVariables(value, `${prefix}${prefix ? '-' : ''}${key}`);
    } else {
      // Generate CSS variable
      css += `  ${cssVar}: ${value};\n`;
    }
  }

  return css;
}

// Generate the CSS file
const cssContent = `/* Auto-generated CSS Custom Properties from tokens.json */
/* Do not edit this file directly - edit tokens.json instead */

:root {
${generateCSSVariables(tokens)}
}
`;

// Write CSS file
const cssPath = path.join(__dirname, 'tokens.css');
fs.writeFileSync(cssPath, cssContent);

console.log('âœ… Generated CSS variables from tokens.json');
